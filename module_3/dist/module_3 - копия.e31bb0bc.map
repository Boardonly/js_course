{"version":3,"sources":["node_modules/input-core/lib/functions/defineMaskList.js","node_modules/input-core/lib/constants/charTypesEnum.js","node_modules/input-core/lib/functions/inputValue.js","node_modules/input-core/lib/functions/removeSelectedRange.js","node_modules/input-core/lib/inputCore.js","node_modules/subscribe-event/subscribe.js","node_modules/mask-input/lib/maskInput.js","ui_controller.js","card_data.js","index.js"],"names":["UIController","inputName","document","getElementById","inputCard","inputClear","button","divResult","tabResult","preloader","value","match","validInput","invalidInput","validation","className","resetInput","last","lastChild","removeChild","localStorage","clear","reset","data","keys","Object","values","table","i","length","tr","createElement","td_key","innerText","append","td_value","name","valid","disabled","addEventListener","trim","split","join","CardData","card","fetch","then","res","json","cardData","uiCntrl","maskInput","MaskInput","querySelector","mask","alwaysShowMask","maskChar","onChange","maska","listInput","onSubmit","onClear","removeTable","altcard","cardNumber","listButton","showResult","getCardInfo","toTable","setItem","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACljTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACraA;;;AACT,0BAAa;AAAA;;AACT,SAAKC,SAAL,GAAiBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAjB;AACA,SAAKC,SAAL,GAAiBF,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAjB;AACA,SAAKE,UAAL,GAAkBH,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAlB;AACA,SAAKG,MAAL,GAAcJ,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAd;AACA,SAAKI,SAAL,GAAiBL,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAjB;AACA,SAAKK,SAAL,GAAiBN,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAjB;AACA,SAAKM,SAAL,GAAiBP,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAjB;AACC;;;;4BACM;AACH,UAAG,KAAKC,SAAL,CAAeM,KAAf,CAAqBC,KAArB,CAA2B,mBAA3B,CAAH,EAAmD;AAC/C,aAAKC,UAAL,CAAgB,KAAKR,SAArB;AACH,OAFD,MAEO;AACH,aAAKS,YAAL,CAAkB,KAAKT,SAAvB;AACH;;AACG,WAAKU,UAAL;AACP;;;+BACUJ,OAAM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A,YAAY,CAACiD,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAexB,GAAf,CAA9B;AAEF,EAOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"module_3 - копия.e31bb0bc.map","sourceRoot":"..","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = defineMaskList;\n/**\n *\n * @param {String} mask\n * @param format\n * @returns {Array}\n */\nfunction defineMaskList(mask, format) {\n    if (!mask) {\n        return [];\n    }\n\n    var stack = [];\n    var escape = false;\n\n    for (var i = 0; i < mask.length; i++) {\n        var item = format[mask[i]];\n        if (escape && item) {\n            item = null;\n            escape = false;\n        }\n        if (!item) {\n            if (!escape && mask[i] === '\\\\') {\n                escape = true;\n                continue;\n            }\n            escape = false;\n            stack.push({\n                char: mask[i],\n                next: null\n            });\n        } else if (item.regexp) {\n            stack.push(item);\n        }\n    }\n\n    return stack;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = {\n    USER: 1,\n    CHAR: 2,\n    MASK: 3\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = inputValue;\n\nvar _charTypesEnum = require('../constants/charTypesEnum.js');\n\nvar _charTypesEnum2 = _interopRequireDefault(_charTypesEnum);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction inputValue(_ref) {\n    var data = _ref.data,\n        _ref$input = _ref.input,\n        input = _ref$input === undefined ? '' : _ref$input,\n        selection = _ref.selection,\n        mask = _ref.mask,\n        maskChar = _ref.maskChar,\n        maskString = _ref.maskString;\n\n    var value = [];\n    var maskedValue = '';\n\n    var maskIndex = 0;\n    var valueIndex = 0;\n    var pastedIndex = 0;\n\n    var inputValuesApplied = 0;\n\n    while (mask[maskIndex]) {\n        var item = data.length > valueIndex ? data[valueIndex] : null;\n        var maskPart = mask[maskIndex];\n\n        var pastedValuesStack = null;\n        if (selection.start <= maskIndex && pastedIndex < input.length) {\n            pastedValuesStack = input.slice(pastedIndex);\n        }\n\n        // Обработка захардкоженных в маску символов. \n        if (maskPart.char) {\n            // Если есть вводимые пользователем значение, в первую очередь проверяем его.\n            // Но не проверяем по всему стеку.\n            if (pastedValuesStack && pastedValuesStack[0] === maskPart.char) {\n                pastedIndex++;\n            } else {\n                if (item && (item.char === maskPart.char || item.type !== _charTypesEnum2.default.USER) || input) {\n                    valueIndex++;\n                }\n            }\n\n            value.push({\n                char: maskPart.char,\n                type: _charTypesEnum2.default.CHAR\n            });\n\n            if (pastedValuesStack) {\n                inputValuesApplied++;\n            }\n\n            maskedValue += maskPart.char;\n        }\n\n        // Кастомный текст\n        if (maskPart.regexp) {\n            var part = null;\n\n            // Если есть вводимое пользователем значение, то проверям его. \n            // Причем пробегаемся по стеку вводимых значений, пока не найдем нужное\n            if (pastedValuesStack) {\n                var i = 0;\n                while (!maskPart.regexp.test(pastedValuesStack[i]) && pastedValuesStack.length > i) {\n                    i++;\n                    pastedIndex++;\n                }\n                if (pastedValuesStack.length > i) {\n                    pastedIndex++;\n                    inputValuesApplied++;\n\n                    // Игнорируем предыдущее значение в инпуте\n                    valueIndex++;\n\n                    part = pastedValuesStack[i];\n                    value.push({\n                        char: part,\n                        type: _charTypesEnum2.default.USER\n                    });\n                    maskedValue += part;\n                }\n            }\n\n            // В пользовательском вводе нет или невалидные данные. Пытаемся аплаить те данные, что были раньше или заменяем на плейсхолдер\n            if (!part) {\n                // Если произошел сдвиг, пропускаем лишнее значение\n                if (item && item.type === _charTypesEnum2.default.CHAR && data.length > valueIndex + 1) {\n                    valueIndex++;\n                    continue;\n                }\n                if (item && item.type === _charTypesEnum2.default.USER && maskPart.regexp.test(item.char)) {\n                    value.push({\n                        char: item.char,\n                        type: _charTypesEnum2.default.USER\n                    });\n                    maskedValue += item.char;\n                    valueIndex++;\n                } else {\n                    part = maskString ? maskString[maskIndex] : maskChar;\n\n                    value.push({\n                        char: part,\n                        type: _charTypesEnum2.default.MASK\n                    });\n\n                    if (data.length > maskIndex) {\n                        valueIndex++;\n                    }\n\n                    maskedValue += part;\n                }\n            }\n        }\n\n        maskIndex++;\n    }\n\n    var selectionPosition = selection.start + inputValuesApplied;\n\n    // Удаляем все ведующие maskChar\n    var bound = value.length - 1;\n    var charsCount = 0;\n    while (bound >= 0 && value[bound].type !== _charTypesEnum2.default.USER) {\n        if (value[bound].type === _charTypesEnum2.default.MASK) {\n            charsCount = 0;\n        }\n        if (value[bound].type === _charTypesEnum2.default.CHAR) {\n            charsCount++;\n        }\n        bound--;\n    }\n    bound += charsCount;\n\n    var visibleValue = '';\n    for (var _i = 0; _i <= bound; _i++) {\n        visibleValue += value[_i].char;\n    }\n\n    return {\n        value: value,\n        visibleValue: visibleValue,\n        maskedValue: maskedValue,\n        selection: {\n            start: selectionPosition,\n            end: selectionPosition\n        }\n    };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = removeSelectedRange;\n\nvar _charTypesEnum = require('../constants/charTypesEnum');\n\nvar _charTypesEnum2 = _interopRequireDefault(_charTypesEnum);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction removeSelectedRange(_ref) {\n    var value = _ref.value,\n        selection = _ref.selection,\n        reformat = _ref.reformat,\n        mask = _ref.mask,\n        maskChar = _ref.maskChar,\n        maskString = _ref.maskString;\n\n    var copyMaskChar = function copyMaskChar(count) {\n        var res = [];\n        for (var i = 0; i < count; i++) {\n            res.push({\n                char: maskChar,\n                type: _charTypesEnum2.default.MASK\n            });\n        }\n        return res;\n    };\n\n    var pasteMaskSymbols = function pasteMaskSymbols() {\n        if (reformat) {\n            return '';\n        }\n\n        if (maskString) {\n            var res = [];\n            for (var i = selection.start; i < selection.end; i++) {\n                res.push({\n                    char: maskString[i],\n                    type: _charTypesEnum2.default.MASK\n                });\n            }\n            return res;\n        }\n\n        return copyMaskChar(selection.end - selection.start);\n    };\n\n    if (selection.end < selection.start) {\n        var tmp = selection.end;\n        selection.end = selection.start;\n        selection.start = tmp;\n    }\n\n    if (selection.start === selection.end) {\n        return value;\n    }\n\n    if (value.length > selection.start) {\n        return value.slice(0, selection.start).concat(pasteMaskSymbols(), value.slice(selection.end, value.length));\n    }\n\n    return value;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createInput = exports.defaults = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _defineMaskList = require('./functions/defineMaskList');\n\nvar _defineMaskList2 = _interopRequireDefault(_defineMaskList);\n\nvar _inputValue = require('./functions/inputValue');\n\nvar _inputValue2 = _interopRequireDefault(_inputValue);\n\nvar _removeSelectedRange = require('./functions/removeSelectedRange');\n\nvar _removeSelectedRange2 = _interopRequireDefault(_removeSelectedRange);\n\nvar _charTypesEnum = require('./constants/charTypesEnum');\n\nvar _charTypesEnum2 = _interopRequireDefault(_charTypesEnum);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar InputCore = function () {\n    function InputCore(_ref) {\n        var value = _ref.value,\n            mask = _ref.mask,\n            reformat = _ref.reformat,\n            maskFormat = _ref.maskFormat,\n            maskChar = _ref.maskChar,\n            maskString = _ref.maskString;\n\n        _classCallCheck(this, InputCore);\n\n        if (maskString && maskString.length !== mask.length) {\n            throw new Error('maskString must have same length as mask');\n        }\n        if (maskChar.length > 1) {\n            throw new Error('maskChar must have only 1 char');\n        }\n        this._maskString = maskString;\n        this._maskChar = maskChar;\n        this._reformat = reformat;\n        this.selection = { start: 0, end: 0 };\n\n        this.setMaskFormat(maskFormat);\n        this._mask = (0, _defineMaskList2.default)(mask, this._maskFormat);\n\n        this.setValue(value);\n    }\n\n    /**\n     * Заполняет _maskFormat, который является объектом byId объектов\n     * @param {Array} maskFormat     \n     */\n\n\n    _createClass(InputCore, [{\n        key: 'setMaskFormat',\n        value: function setMaskFormat(maskFormat) {\n            this._maskFormat = maskFormat.reduce(function (store, item) {\n                store[item.str] = item;\n                return store;\n            }, {});\n        }\n    }, {\n        key: 'input',\n        value: function input(_input) {\n            var _value = this._value;\n\n            var result = void 0;\n\n            if (this._reformat) {\n                result = this._reformat({\n                    data: _value,\n                    input: _input,\n                    selection: this.selection\n                });\n            } else {\n\n                _value = (0, _removeSelectedRange2.default)({\n                    value: _value,\n                    selection: this.selection,\n                    mask: this._mask,\n                    maskChar: this._maskChar,\n                    maskString: this._maskString\n                });\n                this.selection.end = this.selection.start;\n\n                result = (0, _inputValue2.default)({\n                    data: _value,\n                    input: _input,\n                    selection: this.selection,\n                    mask: this._mask,\n                    maskChar: this._maskChar,\n                    maskString: this._maskString\n                });\n            }\n\n            this._value = result.value;\n            this._maskedValue = result.maskedValue;\n            this._visibleValue = result.visibleValue;\n            this.setSelection(result.selection);\n        }\n    }, {\n        key: 'setSelection',\n        value: function setSelection(_ref2) {\n            var start = _ref2.start,\n                end = _ref2.end;\n\n            this.selection = {\n                start: start,\n                end: end\n            };\n        }\n    }, {\n        key: 'getSelection',\n        value: function getSelection() {\n            return {\n                start: this.selection.start,\n                end: this.selection.end\n            };\n        }\n    }, {\n        key: 'backspace',\n        value: function backspace() {\n            this.removePreviosOrSelected();\n        }\n    }, {\n        key: 'paste',\n        value: function paste(value) {\n            this.input(value);\n        }\n\n        /**\n         * Определяет циклический список, в котором учтены циклы маски, по которой будет проходить итерации.\n         * @param {String} mask\n         * @returns {{head: {}, hasCycle: boolean}}\n         */\n\n    }, {\n        key: 'setMask',\n        value: function setMask(mask) {\n\n            this._mask = (0, _defineMaskList2.default)(mask, this._maskFormat);\n\n            this.setValue(this._value);\n        }\n    }, {\n        key: 'getState',\n        value: function getState() {\n            return {\n                value: this.getValue(),\n                maskedValue: this.getMaskedValue(),\n                visibleValue: this.getVisibleValue(),\n                selection: this.getSelection()\n            };\n        }\n    }, {\n        key: 'getValue',\n        value: function getValue() {\n            return this._value;\n        }\n    }, {\n        key: 'setReformat',\n        value: function setReformat(reformat) {\n            this._reformat = reformat;\n            this.setValue(this._value);\n        }\n    }, {\n        key: 'getMaskedValue',\n        value: function getMaskedValue() {\n            return this._maskedValue;\n        }\n    }, {\n        key: 'getVisibleValue',\n        value: function getVisibleValue() {\n            return this._visibleValue;\n        }\n    }, {\n        key: 'setMaskChar',\n        value: function setMaskChar(maskChar) {\n            if (maskChar.length > 1) {\n                throw new Error('maskChar must have only 1 char');\n            }\n\n            this._maskChar = maskChar;\n\n            this.setValue(this._value);\n        }\n    }, {\n        key: 'setMaskString',\n        value: function setMaskString(maskString) {\n            if (maskString && maskString.length !== this._mask.length) {\n                throw new Error('maskString must have same length as mask');\n            }\n\n            this._maskString = maskString;\n\n            this.setValue(this._value);\n        }\n    }, {\n        key: 'removePreviosOrSelected',\n        value: function removePreviosOrSelected() {\n            if (this.selection.start === this.selection.end) {\n                this.selection.start = this.selection.end - 1;\n                if (this.selection.start < 0) {\n                    this.selection.start = 0;\n                }\n            }\n\n            this.input('');\n        }\n    }, {\n        key: 'removeNextOrSelected',\n        value: function removeNextOrSelected() {\n            if (this.selection.start === this.selection.end) {\n                this.selection.end++;\n            }\n\n            this.input('');\n        }\n    }, {\n        key: 'setValue',\n        value: function setValue(data) {\n            var result = void 0;\n\n            if (this._reformat) {\n                result = this._reformat({\n                    data: data,\n                    selection: this.selection\n                });\n            } else {\n                var dataList = data;\n                if (!Array.isArray(dataList)) {\n                    dataList = [];\n                    for (var i = 0; i < data.length; i++) {\n                        dataList.push({\n                            char: data[i],\n                            type: _charTypesEnum2.default.USER\n                        });\n                    }\n                }\n                result = (0, _inputValue2.default)({\n                    data: dataList,\n                    selection: this.selection,\n                    mask: this._mask,\n                    maskChar: this._maskChar,\n                    maskString: this._maskString\n                });\n            }\n\n            this._value = result.value;\n            this._maskedValue = result.maskedValue;\n            this._visibleValue = result.visibleValue;\n            this.setSelection(result.selection);\n        }\n    }]);\n\n    return InputCore;\n}();\n\nvar defaults = exports.defaults = {\n    maskFormat: [{\n        str: '0',\n        regexp: /[0-9]/\n    }, {\n        str: '*',\n        regexp: /./\n    }, {\n        str: 'a',\n        regexp: /[a-zA-Z]/\n    }],\n    maskChar: '',\n    showMask: false,\n    removeSelectedRange: _removeSelectedRange2.default\n};\n\nvar createInput = exports.createInput = function createInput(_ref3) {\n    var value = _ref3.value,\n        maskString = _ref3.maskString,\n        mask = _ref3.mask,\n        reformat = _ref3.reformat,\n        _ref3$maskFormat = _ref3.maskFormat,\n        maskFormat = _ref3$maskFormat === undefined ? defaults.maskFormat : _ref3$maskFormat,\n        _ref3$maskChar = _ref3.maskChar,\n        maskChar = _ref3$maskChar === undefined ? defaults.maskChar : _ref3$maskChar;\n\n    var _reformat = reformat;\n    var _mask = mask;\n    if (!_reformat && !_mask) {\n        _reformat = function _reformat(value) {\n            return value;\n        };\n    } else if (_reformat) {\n        _mask = null;\n    }\n\n    return new InputCore({ value: value, mask: _mask, reformat: _reformat, maskFormat: maskFormat, maskChar: maskChar, maskString: maskString });\n};","!(function() {\n  \"use strict\";\n\n  // Basic subscribe function both browser events or node.js events\n  function subscribe(element, event, handler, options) {\n    var unsubscribeFunctionName = \"removeEventListener\";\n    var unsubscribe = function() {\n      element[unsubscribeFunctionName](event, handler);\n    };\n\n    if (element.addEventListener) {\n      element.addEventListener(event, handler, options);\n      return unsubscribe;\n    }\n\n    if (element.attachEvent) {\n      event = \"on\" + event;\n      element.attachEvent(event, handler);\n      unsubscribeFunctionName = \"detachEvent\";\n      return unsubscribe;\n    }\n\n    if (element.on) {\n      element.on(event, handler);\n      unsubscribeFunctionName = \"off\";\n      return unsubscribe;\n    }\n  }\n\n  // define your own subscribe functions\n  subscribe.define = function(addSubscription, removeSubscription) {\n    return function(element, event, handler, options) {\n      var unsubscribe = function() {\n        element[removeSubscription](event, handler);\n      };\n\n      element[addSubscription](event, handler, options);\n      return unsubscribe;\n    };\n  };\n\n  // umd\n  if (typeof exports === \"object\") {\n    // CommonJS\n    module.exports = subscribe;\n  } else if (typeof define === \"function\" && define.amd) {\n    // AMD. anonymous module\n    define(subscribe);\n  } else {\n    // Global scope\n    global.subscribeEvent = subscribe;\n  }\n})();\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _inputCore = require('input-core');\n\nvar _subscribeEvent = require('subscribe-event');\n\nvar _subscribeEvent2 = _interopRequireDefault(_subscribeEvent);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar KEYBOARD = {\n  BACKSPACE: 8,\n  DELETE: 46\n};\n/**\n * Adapter of react-maskInput to vanilaJs\n */\n\nvar MaskInput = function () {\n  function MaskInput(element, _ref) {\n    var _this = this;\n\n    var _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? _inputCore.defaults.mask : _ref$mask,\n        _ref$value = _ref.value,\n        value = _ref$value === undefined ? '' : _ref$value,\n        reformat = _ref.reformat,\n        maskString = _ref.maskString,\n        _ref$maskChar = _ref.maskChar,\n        maskChar = _ref$maskChar === undefined ? _inputCore.defaults.maskChar : _ref$maskChar,\n        _ref$maskFormat = _ref.maskFormat,\n        maskFormat = _ref$maskFormat === undefined ? _inputCore.defaults.maskFormat : _ref$maskFormat,\n        showMask = _ref.showMask,\n        alwaysShowMask = _ref.alwaysShowMask,\n        onChange = _ref.onChange;\n\n    _classCallCheck(this, MaskInput);\n\n    this.showValue = function () {\n      if (_this.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        _this.element.value = _this.input.getMaskedValue();\n        return;\n      }\n      _this.element.value = _this.input.getVisibleValue();\n    };\n\n    this.setSelection = function () {\n      if (!_this.canSetSelection) {\n        return;\n      }\n      var selection = _this.input.getSelection();\n      _this.element.setSelectionRange(selection.start, selection.end);\n\n      var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (fn) {\n        return setTimeout(fn, 0);\n      };\n      // For android\n      raf(function () {\n        return _this.element.setSelectionRange(selection.start, selection.end);\n      });\n    };\n\n    this.onPaste = function (e) {\n      e.preventDefault();\n      _this.getSelection();\n\n      // getData value needed for IE also works in FF & Chrome\n      _this.input.paste(e.clipboardData.getData('Text'));\n\n      _this.showValue();\n\n      // Timeout needed for IE\n      setTimeout(_this.setSelection, 0);\n\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    this.onChange = function (e) {\n      var currentValue = void 0;\n      if (_this.showMask && (_this.canSetSelection || _this.props.alwaysShowMask)) {\n        currentValue = _this.input.getMaskedValue();\n      } else {\n        currentValue = _this.input.getVisibleValue();\n      }\n\n      // fix conflict by update value in mask model\n      if (e.target.value !== currentValue) {\n        _this.getSelection();\n        _this.input.setValue(e.target.value);\n\n        _this.showValue();\n\n        setTimeout(_this.setSelection, 0);\n      }\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    this.onKeyPress = function (e) {\n      if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n        return;\n      }\n\n      e.preventDefault();\n      _this.getSelection();\n      _this.input.input(e.key || e.data || String.fromCharCode(e.which));\n      _this.showValue();\n      _this.setSelection();\n      _this.props.onChange && _this.props.onChange(e);\n    };\n\n    this.onKeyDown = function (e) {\n      if (e.which === KEYBOARD.BACKSPACE) {\n        e.preventDefault();\n        _this.getSelection();\n        _this.input.removePreviosOrSelected();\n\n        _this.showValue();\n        _this.setSelection();\n\n        _this.props.onChange && _this.props.onChange(e);\n      }\n\n      if (e.which === KEYBOARD.DELETE) {\n        e.preventDefault();\n        _this.getSelection();\n        _this.input.removeNextOrSelected();\n\n        _this.showValue();\n        _this.setSelection();\n\n        _this.props.onChange && _this.props.onChange(e);\n      }\n    };\n\n    this.onFocus = function () {\n      _this.canSetSelection = true;\n    };\n\n    this.onBlur = function () {\n      _this.canSetSelection = false;\n    };\n\n    this.input = this.input = (0, _inputCore.createInput)({\n      value: value,\n      reformat: reformat,\n      maskString: maskString,\n      maskChar: maskChar,\n      mask: mask,\n      maskFormat: maskFormat\n    });\n\n    this.props = {\n      mask: mask,\n      value: value,\n      reformat: reformat,\n      maskChar: maskChar,\n      maskFormat: maskFormat,\n      maskString: maskString,\n      showMask: showMask,\n      alwaysShowMask: alwaysShowMask,\n      onChange: onChange\n    };\n\n    this.showMask = alwaysShowMask || showMask;\n\n    this.element = element;\n    this.showValue();\n    this.subscribe();\n  }\n\n  _createClass(MaskInput, [{\n    key: 'getSelection',\n    value: function getSelection() {\n      this.input.setSelection({\n        start: this.element.selectionStart,\n        end: this.element.selectionEnd\n      });\n    }\n  }, {\n    key: 'subscribe',\n    value: function subscribe() {\n      this.unsubscribe = {\n        onPaste: (0, _subscribeEvent2.default)(this.element, 'paste', this.onPaste),\n        onKeyDown: (0, _subscribeEvent2.default)(this.element, 'keydown', this.onKeyDown),\n        onKeyPress: (0, _subscribeEvent2.default)(this.element, this.keyPressPropName(), this.onKeyPress),\n        onChange: (0, _subscribeEvent2.default)(this.element, 'change', this.onChange),\n        onFocus: (0, _subscribeEvent2.default)(this.element, 'focus', this.onFocus),\n        onBlur: (0, _subscribeEvent2.default)(this.element, 'blur', this.onBlur)\n      };\n    }\n  }, {\n    key: 'keyPressPropName',\n    value: function keyPressPropName() {\n      if (typeof navigator !== 'undefined' && navigator.userAgent.match(/Android/i)) {\n        return 'beforeinput';\n      }\n      return 'keypress';\n    }\n  }, {\n    key: 'setProps',\n    value: function setProps(_ref2) {\n      var mask = _ref2.mask,\n          value = _ref2.value,\n          reformat = _ref2.reformat,\n          maskString = _ref2.maskString,\n          maskChar = _ref2.maskChar,\n          maskFormat = _ref2.maskFormat,\n          showMask = _ref2.showMask,\n          alwaysShowMask = _ref2.alwaysShowMask,\n          onChange = _ref2.onChange;\n\n      var updated = false;\n\n      if (this.props.onChange !== onChange) {\n        this.props.onChange = onChange;\n      }\n\n      if (this.props.alwaysShowMask !== alwaysShowMask || this.props.showMask !== showMask) {\n        this.showMask = alwaysShowMask || showMask;\n\n        this.props.alwaysShowMask = alwaysShowMask;\n        this.props.showMask = showMask;\n\n        updated = true;\n      }\n\n      if (maskFormat && maskFormat !== this.props.maskFormat) {\n        this.input.setMaskFormat(maskFormat);\n\n        this.props.maskFormat = maskFormat;\n\n        updated = true;\n      }\n\n      if (mask !== this.props.mask) {\n        this.input.setMask(mask);\n\n        this.props.mask = mask;\n\n        updated = true;\n      }\n\n      if (maskString !== this.props.maskString) {\n        this.input.setMaskString(maskString);\n\n        this.props.maskString = maskString;\n\n        updated = true;\n      }\n\n      if (maskChar !== this.props.maskChar) {\n        this.input.setMaskChar(maskChar);\n\n        this.props.maskChar = maskChar;\n\n        updated = true;\n      }\n\n      if (reformat !== this.props.reformat) {\n        this.input.setReformat(reformat);\n\n        this.props.reformat = reformat;\n\n        updated = true;\n      }\n\n      if (value !== this.props.value) {\n        this.input.setValue(value);\n\n        this.props.value = value;\n\n        updated = true;\n      }\n\n      if (updated) {\n        this.showValue();\n        this.setSelection();\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.unsubscribe.onPaste();\n      this.unsubscribe.onKeyDown();\n      this.unsubscribe.onKeyPress();\n      this.unsubscribe.onChange();\n      this.unsubscribe.onFocus();\n      this.unsubscribe.onBlur();\n    }\n  }]);\n\n  return MaskInput;\n}();\n\nexports.default = MaskInput;","'use strict';\r\nexport class UIController{\r\n    constructor(){\r\n        this.inputName = document.getElementById('name');\r\n        this.inputCard = document.getElementById('card');\r\n        this.inputClear = document.getElementById('clear');\r\n        this.button = document.getElementById('submit');\r\n        this.divResult = document.getElementById('result');\r\n        this.tabResult = document.getElementById('table_result');\r\n        this.preloader = document.getElementById('preloader');\r\n        }\r\n        maska(){\r\n            if(this.inputCard.value.match(/^(\\d{4}-){3}\\d{4}/)){\r\n                this.validInput(this.inputCard);\r\n            } else {\r\n                this.invalidInput(this.inputCard);\r\n            }\r\n                this.validation()\r\n        }\r\n        showResult(value){\r\n            if(value){\r\n                this.preloader.className = 'hide';\r\n                this.divResult.className = 'result';\r\n                this.resetInput();\r\n            } else {\r\n                this.preloader.className = 'preloader';\r\n                this.divResult.className = 'hide';\r\n            }\r\n        }\r\n        removeTable() {\r\n            let last;\r\n            while (last = this.tabResult.lastChild){\r\n                this.tabResult.removeChild(last);\r\n            };\r\n            localStorage.clear();\r\n        }\r\n        resetInput(){\r\n            this.inputName.reset();\r\n            this.inputCard.reset();\r\n        }\r\n        toTable(data) {\r\n            const keys = Object.keys(data);\r\n            const values = Object.values(data);\r\n            const table = document.getElementById('table_result');\r\n            for (let i = 0; i < keys.length; i += 1) {\r\n                const tr = document.createElement('tr');\r\n                const td_key = document.createElement('td');\r\n                td_key.innerText = `${keys[i]}`;\r\n                tr.append(td_key);\r\n                const td_value = document.createElement('td');\r\n                if (values[i] !== \"\") {\r\n                    td_value.innerText = `${values[i]}`;\r\n                } else {\r\n                    td_value.innerText = `Unknown`;\r\n                } \r\n                tr.append(td_value);\r\n                table.append(tr);\r\n            }\r\n        };\r\n        validInput(name){\r\n            name.className = \"green\";  \r\n            name.valid = true;\r\n        }\r\n        invalidInput(name){\r\n            name.className = \"red\";\r\n            name.valid = false;\r\n        }\r\n        \r\n        validation(){\r\n            if(this.inputName.valid && this.inputCard.valid){\r\n                    this.button.disabled = false;\r\n                } else {\r\n                    this.button.disabled = true;\r\n            }\r\n        }\r\n        listInput(){\r\n            this.inputName.addEventListener('change', ()=>{\r\n                if (this.inputName.value.trim().length > 2){\r\n                    this.validInput(this.inputName);\r\n                } else {\r\n                    this.invalidInput(this.inputName);\r\n                }\r\n                this.validation();\r\n            })\r\n        }\r\n        listButton(){\r\n           return this.inputCard.value.split('-').join('');\r\n        }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const inputName = document.getElementById('name');\r\n// const inputCard = document.getElementById('card');\r\n// const button = document.getElementById('submit');\r\n// const divResult = document.getElementById('result');\r\n// const tabResult = document.getElementById('table_result');\r\n// const preloader = document.getElementById('preloader');\r\n\r\n// function toTable(data) {\r\n// \tconst keys = Object.keys(data);\r\n// \tconst values = Object.values(data);\r\n// \tconst table = document.getElementById('table_result');\r\n// \tfor (let i = 0; i < keys.length; i += 1) {\r\n// \t\tconst tr = document.createElement('tr');\r\n// \t\tconst td_key = document.createElement('td');\r\n// \t\ttd_key.innerText = `${keys[i]}`;\r\n// \t\ttr.append(td_key);\r\n// \t\tconst td_value = document.createElement('td');\r\n// \t\ttd_value.innerText = `${values[i]}`;\r\n// \t\ttr.append(td_value);\r\n// \t\ttable.append(tr);\r\n// \t}\r\n// };","\r\n\r\nexport default class CardData{\r\n    constructor(card){\r\n        this.card = card;\r\n    }\r\n    getCardInfo(){\r\n        return fetch(`https://api.bincodes.com/cc/?format=json&api_key=d96ca493f5be297f8c304a87edcdf6a8&cc=${this.card}`)\r\n            .then(res => res.json())\r\n        \r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n// getCardInfo(card){\r\n//     preloader.className = 'preloader';\r\n//     divResult.className = 'hide';\r\n//     return fetch(`https://api.bincodes.com/cc/?format=json&api_key=d96ca493f5be297f8c304a87edcdf6a8&cc=${this.card}`)\r\n//         .then(res => res.json())\r\n//         .then(res => console.log(res))\r\n//         .then(res => toTable(res))\r\n//         .then(() =>{\r\n//             preloader.className = 'hide';\r\n//             divResult.className = 'result';\r\n//             resetInput();\r\n//         })\r\n// };","import MaskInput from 'mask-input';\nimport {UIController} from './ui_controller';\nimport CardData from './card_data';\n\nconst button = document.getElementById('submit');\nconst inputClear = document.getElementById('clear');\nconst cardData = new CardData;\nconst uiCntrl = new UIController;\nconst maskInput = new MaskInput(document.querySelector('.js-input-selector'), {\n\tmask: '0000-0000-0000-0000',\n\talwaysShowMask: true,\n\tmaskChar: '_',\n\tonChange(){\n\t\treturn uiCntrl.maska();\n\t}\n});\nuiCntrl.validation();\nuiCntrl.listInput();\nbutton.addEventListener('click', onSubmit)\ninputClear.addEventListener('click', onClear)\n\nfunction onClear(){\n\tuiCntrl.removeTable();\n}\nfunction onSubmit(){\n\t\tconst altcard = {\"bin\":\"515735\",\"bank\":\"CITIBANK N.A.\",\"card\":\"MASTERCARD\",\"type\":\"CREDIT\",\"level\":\"WORLD\",\"country\":\"UNITED STATES\",\"countrycode\":\"US\",\"website\":\"\",\"phone\":\"\",\"valid\":\"true\"};\n\t\tlet cardNumber = uiCntrl.listButton();\n\t\tuiCntrl.showResult();\n\t\tcardData.getCardInfo(cardNumber)\n\t\t\t.then(res => uiCntrl.toTable(altcard))\n\t\t\t// .then(res => uiCntrl.toTable(res))\n\t\t\t.then(uiCntrl.showResult(1))\n\t\t\tlocalStorage.setItem('table', JSON.stringify(res));\n\t\t\t\n}\n\n\n\n\n\n\n// class CardData{\n//     constructor(card){\n//         this.card = card;\n//     }\n//     getCardInfo(card){\n//         preloader.className = 'preloader';\n//         divResult.className = 'hide';\n//         return fetch(`https://api.bincodes.com/cc/?format=json&api_key=d96ca493f5be297f8c304a87edcdf6a8&cc=${this.card}`)\n//             .then(res => res.json())\n//             .then(res => console.log(res))\n//             .then(res => toTable(res))\n//             .then(() =>{\n//                 preloader.className = 'hide';\n//                 divResult.className = 'result';\n//                 resetInput();\n//             })\n//     };\n// }\n\n\n\n// class UIController{\n//     constructor(data){\n//         this.data = data;\n//         this.inputName = document.getElementById('name');\n//         this.inputCard = document.getElementById('card');\n//         this.button = document.getElementById('submit');\n//         this.divResult = document.getElementById('result');\n//         this.tabResult = document.getElementById('table_result');\n//         this.preloader = document.getElementById('preloader');\n//     }\n//         toTable() {\n//             const keys = Object.keys(this.data);\n//             const values = Object.values(this.data);\n//             const table = document.getElementById('table_result');\n//             for (let i = 0; i < keys.length; i += 1) {\n// \t\t\t\tconst tr = document.createElement('tr');\n\t\t\t\t\n//                 const td_key = document.createElement('td');\n//                 td_key.innerText = `${keys[i]}`;\n//                 tr.append(td_key);\n//                 const td_value = document.createElement('td');\n//                 td_value.innerText = `${values[i]}`;\n//                 tr.append(td_value);\n//                 table.append(tr);\n//             }\n//         };\n//         onChange(){\n//             if(inputCard.value.match(/^(\\d{4}-){3}\\d{4}/)){\n//                   validInput(inputCard);\n//               } else {\n//                   invalidInput(inputCard);\n//               }\n//               validation()\n//           }\n//         validInput(name){\n//             name.className = \"green\";  \n//             name.valid = true;\n//         }\n//         invalidInput(name){\n//             name.className = \"red\";\n//             name.valid = false;\n//         }\n        \n//         validation(){\n//             if(inputName.valid && inputCard.valid){\n//                     button.disabled = false;\n//                 } else {\n//                     button.disabled = true;\n//             }\n//         }  \n\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n// // const inputName = document.getElementById('name');\n// // const inputCard = document.getElementById('card');\n// // const button = document.getElementById('submit');\n// // const divResult = document.getElementById('result');\n// // const tabResult = document.getElementById('table_result');\n// // const preloader = document.getElementById('preloader');\n// // const controller = new UIController();\n// // const maskInput = new MaskInput(document.querySelector('.js-input-selector'), {\n// // \tmask: '0000-0000-0000-0000',\n// // \talwaysShowMask: true,\n// // \tmaskChar: '_',\n// // \tonChange(){\n// // \t\tif(inputCard.value.match(/^(\\d{4}-){3}\\d{4}/)){\n// // \t\t\t  validInput(inputCard);\n// // \t\t  } else {\n// // \t\t\t  invalidInput(inputCard);\n// // \t\t  }\n// // \t\t  validation()\n// // \t  }\n// //   });\n  \n// //   inputName.addEventListener('change', ()=>{\n// // \t  if (inputName.value.trim().length > 2){\n// // \t\t  validInput(inputName);\n// // \t  } else {\n// // \t\t  invalidInput(inputName);\n// // \t  }\n// // \t  validation();\n// //   })\n  \n// //   button.addEventListener('click', ()=>{\n// // \t  let cardNumber = inputCard.value.split('-').join('');\n// // \t  console.log(cardNumber);\n// // \t  getCardInfo(cardNumber);\n// //   })\n  \n// //   function validInput(name){\n// // \t  name.className = \"green\";  \n// // \t  name.valid = true;\n// //   }\n// //   function invalidInput(name){\n// // \t  name.className = \"red\";\n// // \t  name.valid = false;\n// //   }\n  \n// //   function validation(){\n// // \t  if(inputName.valid && inputCard.valid){\n// // \t\t\t  button.disabled = false;\n// // \t\t  } else {\n// // \t\t\t  button.disabled = true;\n// // \t  }\n// //   }\n  \n  \n  \n  \n// //   function getCardInfo(card){\n// // \t  preloader.className = 'preloader';\n// // \t  divResult.className = 'hide';\n// // \t  return fetch(`https://api.bincodes.com/cc/?format=json&api_key=d96ca493f5be297f8c304a87edcdf6a8&cc=${card}`)\n// // \t\t  .then(res => res.json())\n// // \t\t  .then(res => console.log(res))\n// // \t\t  .then(res => toTable(res))\n// // \t\t  .then(() =>{\n// // \t\t\t  preloader.className = 'hide';\n// // \t\t\t  divResult.className = 'result';\n// // \t\t\t  resetInput();\n// // \t\t  })\n// //    };\n  \n  "]}